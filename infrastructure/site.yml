---
- name: Preapre all hosts
  hosts: all
  become: true
  tasks:
    - name: Create group
      group:
        name: "{{ user_group }}"
        state: present
    - name: Create user
      user:
        name: "{{ user_name }}"
        generate_ssh_key: true
      register: ssh_key_info
    
    - name: Install JDK17
      package:
        name: "{{ java_packages }}"
        state: present
    
    - name: Install requirements for Python 3.13.1
      apt:
        update_cache: yes
        name:
          - build-essential
          - libssl-dev
          - libffi-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libgdbm-dev
          - liblzma-dev
          - python3-openssl
          - python3-pip
          - pkg-config
          - git
          - ca-certificates
        state: present

      - name: Get Python 3.13.1
        get_url:
          url: "https://www.python.org/ftp/python/3.13.1/Python-3.13.1.tgz"
          dest: "/tmp/"

      - name: Extract Python 3.13.1
        unarchive:
          src: "/tmp/Python-3.13.1.tgz"
          dest: "/tmp/"
          remote_src: true

      - name: Extract Python 3.13.1
        unarchive:
          src: "/tmp/Python-3.13.1.tgz"
          dest: "/tmp/Python-3.13.1"
          remote_src: true

      - name: Configure Python 3.13.1
        command: "./configure --prefix=/usr --enable-optimizations --with-ensurepip=install"
        args:
          chdir: /tmp/Python-3.13.1

      - name: Build Python 3.13.1
        command: "make -j $(nproc)"
        args:
          chdir: /tmp/Python-3.13.1

      - name: Install Python 3.13.1
        command: "make install"
        args:
          chdir: /tmp/Python-3.13.1

- name: Get Jenkins master installed
  become: true
  hosts: jenkins_masters
  tasks:
    - name: Get repo key Jenkins
      get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc

    - name: Copy repo Jenkins
      copy:
        src: "./files/jenkins.list"
        dest: "/etc/apt/sources.list.d/"
        mode: 0755

    - name: Install Jenkins
      apt:
        update_cache: yes
        name:
          - jenkins
        state: present
      register: jenkins_installed

    - name: Ensure jenkins agents are present in known_hosts file
      become_user: root #"{{ jenkins_user_name }}"
      known_hosts:
        name: "{{ hostvars[item].ansible_host }}"
        state: present
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }}') }}"
        hash_host: true
      with_items: "{{ groups.jenkins_agents }}"

    - name: Start Jenkins
      systemd:
        name: jenkins
        state: restarted
        enabled: true
      when: jenkins_installed is changed

- name: Prepare jenkins agent
  hosts: jenkins_agents
  become: true
  become_user: root #"{{ jenkins_user_name }}"
  tasks:
    - name: Add master publickey into authorized_key
      authorized_key:
        user: "{{ jenkins_user_name }}"
        state: present
        key: "{{ hostvars['jenkins-master-01']['ssh_key_info']['ssh_public_key'] }}"
    - name: Create agent_dir
      become_user: root
      file:
        path: "{{ jenkins_agent_dir }}"
        state: directory
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_group }}"

    - name: Create docker keyrings dir
      become_user: root
      file:
        path: "/etc/apt/keyrings"
        state: directory
        mode: 0755

    - name: Add docker gpg-key
      become_user: root
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0644

    - name: Copy repo Docker
      template:
        src: "./files/docker.list.jq"
        dest: "/etc/apt/sources.list.d/docker.list"
        mode: 0755

    - name: Install docker
      become_user: root
      apt:
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Update pip
      become_user: root
      pip:
        executable: pip3
        name: pip
        extra_args: --upgrade
    - name: Install Ansible
      become_user: root
      pip:
        executable: pip3
        name:
          - selinux
          - ansible==9.13.0
          - molecule
          - molecule_docker
        state: present

    - name: Reinstall Selinux
      become_user: root
      pip:
        executable: pip3
        name:
          - selinux
        state: forcereinstall

    - name: Add local to PATH
      lineinfile:
        dest: ~/.bashrc
        regexp: export PATH=$PATH:/home/jenkins/.local/bin
        line: export PATH=$PATH:/home/jenkins/.local/bin
    - name: Create docker group
      become_user: root
      group:
        name: docker
        state: present
    - name: Add jenkinsuser to dockergroup
      become_user: root
      user:
        name: "{{ jenkins_user_name }}"
        groups: docker
    - name: Restart docker
      become_user: root
      systemd:
        name: docker
        state: restarted
        enabled: true
    - name: Install agent.jar
      get_url:
        url: "http://{{ hostvars['jenkins-master-01']['ansible_host'] }}:8080/jnlpJars/agent.jar"
        dest: "{{ jenkins_agent_dir }}"
      register: install_agent
      until: install_agent is succeeded
      retries: 10
      timeout: 10

